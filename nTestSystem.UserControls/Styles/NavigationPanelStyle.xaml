<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:nTestSystem.UserControls.Controls">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/nTestSystem.UserControls;component/Styles/Colors.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<SolidColorBrush x:Key="Item.MouseOver.Background" Color="#F3F3F3" />
	<SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da" />
	<SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA" />
	<SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA" />
	<SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA" />
	<SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA" />
	<SolidColorBrush x:Key="Item.SelectedActive.foreground" Color="#000" />
	
	<!--#region 左边样式-->
	<Style x:Key="LeftIndicatorItemStyle" TargetType="{x:Type ctrls:SegmentItem}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctrls:SegmentItem}">
					<Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="3"/>
							</Grid.ColumnDefinitions>

							<ContentPresenter Margin="20,8,20,8" Grid.Column="0"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

							<Border x:Name="markline" Grid.Column="1" Background="#003399FF" SnapsToDevicePixels="True"
                                    UseLayoutRounding="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource MouseOverBursh}" />
							<!--<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBursh}" />-->
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource MouseOverBursh}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBursh}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBursh}" />
							<Setter TargetName="markline" Property="Background" Value="{StaticResource ThemeColor}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="markline" Property="Background" Value="{StaticResource ThemeColor}" />
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBursh}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region 右边样式-->
	<Style x:Key="RightIndicatorItemStyle" TargetType="{x:Type ctrls:SegmentItem}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctrls:SegmentItem}">
					<Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="3" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<ContentPresenter Margin="20,8,20,8" Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

							<Border x:Name="markline" Grid.Column="0" Background="#003399FF" SnapsToDevicePixels="True"
                                    UseLayoutRounding="True" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource MouseOverBursh}" />
							<!--<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBursh}" />-->
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource MouseOverBursh}" />
							<Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBursh}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBursh}" />
							<Setter TargetName="markline" Property="Background" Value="{StaticResource ThemeColor}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="markline" Property="Background" Value="{StaticResource ThemeColor}" />
							<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBursh}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region 索引器在左边-->
	<ControlTemplate x:Key="IndicatorIsInLeft" TargetType="{x:Type ctrls:NavigationPanel}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="2"/>
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<ctrls:SegmentControl x:Name="PART_Indicator" SelectedIndex="0" BorderBrush="Transparent" BorderThickness="0" 
                                HorizontalAlignment="{TemplateBinding IndicatorHorizontalAlignment}"
                                Margin="{TemplateBinding IndicatorMargin}"
                                ItemsSource="{TemplateBinding ItemsSource}"
                                DisplayMemberPath="Header"
								IndicatorPlacement="{TemplateBinding IndicatorPlacement}"
                                ItemContainerStyle="{TemplateBinding IndicatorItemContainerStyle}"/>
			<GridSplitter Grid.Column="1" Width="1" Background="#FFF3F3F3" Margin="0 4"/>
			<ContentPresenter x:Name="PART_ContentPresenter" Grid.Column="2"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
		</Grid>
	</ControlTemplate>
	<!--#endregion-->

	<!--#region 索引器在顶部-->
	<ControlTemplate x:Key="IndicatorIsInTop" TargetType="{x:Type ctrls:NavigationPanel}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="auto" />
				<RowDefinition Height="2"/>
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>
			<ctrls:SegmentControl x:Name="PART_Indicator" SelectedIndex="0"
								  HorizontalAlignment="{TemplateBinding IndicatorHorizontalAlignment}"
								  Margin="{TemplateBinding IndicatorMargin}"
                                  ItemsSource="{TemplateBinding ItemsSource}"
                                  DisplayMemberPath="Header"
								  IndicatorPlacement="{TemplateBinding IndicatorPlacement}"
                                  ItemContainerStyle="{TemplateBinding IndicatorItemContainerStyle}"/>
			<GridSplitter Grid.Row="1" Height="1" Background="#FFF3F3F3" Margin="4 0"/>
			<ContentPresenter x:Name="PART_ContentPresenter" Grid.Row="2"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
		</Grid>
	</ControlTemplate>
	<!--#endregion-->

	<!--#region 索引器在右边-->
	<ControlTemplate x:Key="IndicatorIsInRight" TargetType="{x:Type ctrls:NavigationPanel}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="2"/>
				<ColumnDefinition Width="auto" />
			</Grid.ColumnDefinitions>
			<ctrls:SegmentControl x:Name="PART_Indicator" Grid.Column="2" SelectedIndex="0" BorderBrush="Transparent" BorderThickness="0" 
                                HorizontalAlignment="{TemplateBinding IndicatorHorizontalAlignment}"
                                Margin="{TemplateBinding IndicatorMargin}"
                                ItemsSource="{TemplateBinding ItemsSource}"
                                DisplayMemberPath="Header"
								IndicatorPlacement="{TemplateBinding IndicatorPlacement}"
                                ItemContainerStyle="{TemplateBinding IndicatorItemContainerStyle}"/>
			<GridSplitter Grid.Column="1" Width="1" Background="#FFF3F3F3" Margin="0 4"/>
			<ContentPresenter x:Name="PART_ContentPresenter" Grid.Column="0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
		</Grid>
	</ControlTemplate>
	<!--#endregion-->

	<!--#region 索引器在底部-->
	<ControlTemplate x:Key="IndicatorIsInBottom" TargetType="{x:Type ctrls:NavigationPanel}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="2"/>
				<RowDefinition Height="auto" />
			</Grid.RowDefinitions>
			<ctrls:SegmentControl x:Name="PART_Indicator" Grid.Row="2" SelectedIndex="0" 
                                HorizontalAlignment="{TemplateBinding IndicatorHorizontalAlignment}"
                                Margin="{TemplateBinding IndicatorMargin}"
                                ItemsSource="{TemplateBinding ItemsSource}"
                                DisplayMemberPath="Header"
                                IndicatorPlacement="{TemplateBinding IndicatorPlacement}"
                                ItemContainerStyle="{TemplateBinding IndicatorItemContainerStyle}" />
			<GridSplitter Grid.Row="1" Height="1" Background="#FFF3F3F3" Margin=" 4 0"/>
			<ContentPresenter x:Name="PART_ContentPresenter" Grid.Row="0"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
		</Grid>
	</ControlTemplate>
	<!--#endregion-->

	<Style TargetType="{x:Type ctrls:NavigationPanel}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template" Value="{StaticResource IndicatorIsInTop}" />
		<Style.Triggers>
			<Trigger Property="IndicatorPlacement" Value="Left">
				<Setter Property="Template" Value="{StaticResource IndicatorIsInLeft}" />
				<Setter Property="IndicatorItemContainerStyle" Value="{StaticResource LeftIndicatorItemStyle}" />
				<Setter Property="IndicatorStyle" Value="{StaticResource LeftIndicatorStyle}" />
			</Trigger>
			<Trigger Property="IndicatorPlacement" Value="Right">
				<Setter Property="Template" Value="{StaticResource IndicatorIsInRight}" />
				<Setter Property="IndicatorItemContainerStyle" Value="{StaticResource RightIndicatorItemStyle}" />
				<Setter Property="IndicatorStyle" Value="{StaticResource RightIndicatorStyle}" />
			</Trigger>
			<Trigger Property="IndicatorPlacement" Value="Bottom">
				<Setter Property="Template" Value="{StaticResource IndicatorIsInBottom}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
	